{"remainingRequest":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/src/views/curso/Tema3.vue?vue&type=template&id=367544f9&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/src/views/curso/Tema3.vue","mtime":1740342350428},{"path":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Tendencia_Educacion_Infantil/U2_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}